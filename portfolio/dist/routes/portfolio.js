"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const portfolioController_1 = require("../controllers/portfolioController");
const router = (0, express_1.Router)();
const portfolioController = new portfolioController_1.PortfolioController();
router.get('/', portfolioController.getAllPortfolios);
router.post('/', portfolioController.createPortfolio);
router.get('/:id', portfolioController.getPortfolio);
router.put('/:id', portfolioController.updatePortfolio);
router.delete('/:id', portfolioController.deletePortfolio);
router.get('/:id/holdings', portfolioController.getHoldings);
router.post('/:id/holdings', portfolioController.addHolding);
router.put('/:id/holdings/:holdingId', portfolioController.updateHolding);
router.delete('/:id/holdings/:holdingId', portfolioController.removeHolding);
router.get('/:id/analysis', portfolioController.getPortfolioAnalysis);
router.get('/:id/performance', portfolioController.getPerformance);
router.get('/:id/risk', portfolioController.getRiskAnalysis);
router.get('/:id/watchlist', portfolioController.getWatchlist);
router.post('/:id/watchlist', portfolioController.addToWatchlist);
router.delete('/:id/watchlist/:symbol', portfolioController.removeFromWatchlist);
router.get('/:id/trading-decisions', portfolioController.getTradingDecisions);
router.post('/analyze/stock/:symbol', portfolioController.analyzeStock);
router.get('/analyze/stock/:symbol', portfolioController.analyzeStock);
router.post('/analyze/multiple', portfolioController.analyzeMultipleStocks);
router.post('/analyze/popular', portfolioController.getPopularStocks);
router.get('/analyze/popular', portfolioController.getPopularStocks);
exports.default = router;
//# sourceMappingURL=portfolio.js.map